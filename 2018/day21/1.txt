#ip 1

[0, 0, 0, 0, 0, 0]
0 seti 123 0 5        // r5 = 123

[0, 1, 0, 0, 0, 123]
1 bani 5 456 5        // r5 = r5 & 456 = 123 & 456 = 72

[0, 2, 0, 0, 0, 72]
2 eqri 5 72 5         // r5 = r5 == 72 ? 1 : 0 = 72 == 72 ? 1 : 0 = 1

[0, 3, 0, 0, 0, 1]
3 addr 5 1 1          // r1 = r5 + r1 = 1 + 3 = 4, so go to 5

4 seti 0 0 1          // skipped

[0, 5, 0, 0, 0, 0]
5 seti 0 3 5          // r5 = 0

[0, 6, 0, 0, 0, 0]
6 bori 5 65536 4      // r4 = r5 | 65536 = 0 | 65536 = 65536

[0, 7, 0, 0, 65536, 0]
7 seti 13284195 4 5   // r5 = 13284195

[0, 8, 0, 0, 65536, 13284195]
8 bani 4 255 3        // r3 = r4 & 255 = 65536 & 255 = 0

[0, 9, 0, 0, 65536, 13284195]
9 addr 5 3 5          // r5 = r5 + r3 = 13284195 + 0 = 13284195

[0, 10, 0, 0, 65536, 13284195]
10 bani 5 16777215 5  // r5 = r5 & 16777215 = 13284195 & 16777215 = 13284195

[0, 11, 0, 0, 65536, 13284195]
11 muli 5 65899 5     // r5 = r5 * 65899 = 13284195 * 65899 = 875415166305

[0, 12, 0, 0, 65536, 875415166305]
12 bani 5 16777215 5  // r5 = r5 & 16777215 = 875415166305 & 16777215 = 13589857

[0, 13, 0, 0, 65536, 13589857]
13 gtir 256 4 3       // r3 = 256 > r4 ? 1 : 0 = 256 > 65536 ? 1 : 0 = 0

[0, 14, 0, 0, 65536, 13589857]
14 addr 3 1 1         // r1 = r3 + r1 = 0 + 14 = 14, go to instr 15

[0, 15, 0, 0, 65536, 13589857]
15 addi 1 1 1         // r1 = r1 + 1 = 15 + 1 = 16, go to instr 17

16 seti 27 1 1        // skipped

[0, 17, 0, 0, 65536, 13589857]
17 seti 0 5 3         // r3 = 0

[0, 18, 0, 0, 65536, 13589857]
18 addi 3 1 2         // r2 = r3 + 1 = 0 + 1 = 1

[0, 19, 1, 0, 65536, 13589857]
19 muli 2 256 2       // r2 = r2 * 256 = 1 * 256 = 256

[0, 20, 256, 0, 65536, 13589857]
20 gtrr 2 4 2         // r2 = r2 > r4 ? 1 : 0 = 256 > 65536 ? 1 : 0 = 0

[0, 21, 0, 0, 65536, 13589857]
21 addr 2 1 1         // r1 = r2 + r1 = 0 + 21 = 21, go to instr 22

[0, 22, 0, 0, 65536, 13589857]
22 addi 1 1 1         // r1 = r1 + 1 = 22 + 1 = 23, go to instr 24

23 seti 25 2 1        // skipped

[0, 24, 0, 0, 65536, 13589857]
24 addi 3 1 3         // r3 = r3 + 1 = 0 + 1 = 1

[0, 24, 0, 1, 65536, 13589857]
25 seti 17 1 1        // r1 = 17, go to instr 18

26 setr 3 7 4
27 seti 7 3 1
28 eqrr 5 0 3

[, 29, ]
29 addr 3 1 1         // r1 = r3 + r1 = 0 or 1 + r1 = go to instr 30
                      //   or end
30 seti 5 3 1


continuing at instr 18:

[0, 18, 0, 1, 65536, 13589857]
18 addi 3 1 2         // r2 = r3 + 1 = 1 + 1 = 2

[0, 19, 2, 1, 65536, 13589857]
19 muli 2 256 2       // r2 = r2 * 256 = 2 * 256 = 512

[0, 20, 512, 1, 65536, 13589857]
20 gtrr 2 4 2         // r2 = r2 > r4 ? 1 : 0 = 512 > 65536 ? 1 : 0 = 0

[0, 21, 0, 1, 65536, 13589857]
21 addr 2 1 1         // r1 = r2 + r1 = 0 + 21 = 21, go to instr 22
                      // but can see eventually will get to instr 23
                      // instead

[0, 22, 0, 1, 65536, 13589857]
22 addi 1 1 1         // r1 = r1 + 1 = 22 + 1 = 23, go to instr 24

23 seti 25 2 1        // skipped. if hit, go to instr 26

[0, 24, 0, 0, 65536, 13589857]
24 addi 3 1 3         // r3 = r3 + 1 = 0 + 1 = 1

[0, 24, 0, 1, 65536, 13589857]
25 seti 17 1 1        // r1 = 17, go to instr 18


continue at instr 26:

[0, 26, 1, 256, 65536, 13589857]
26 setr 3 7 4         // r4 = r3
                      // interesting r4 changes, could it be different for
                      // above if we hit the above again?

[0, 27, 1, 256, 256, 13589857]
27 seti 7 3 1         // r1 = 7, go to instr 8

28 eqrr 5 0 3
29 addr 3 1 1
30 seti 5 3 1


continue at instr 8:

[0, 8, 1, 256, 256, 13589857]
8 bani 4 255 3        // r3 = r4 & 255 = 256 & 255 = 0

[0, 9, 1, 0, 256, 13589857]
9 addr 5 3 5          // r5 = r5 + r3 = 13589857 + 0 = 13589857

[0, 10, 1, 0, 256, 13589857]
10 bani 5 16777215 5  // r5 = r5 & 16777215 = 13589857 & 16777215 = 13589857

[0, 11, 1, 0, 256, 13589857]
11 muli 5 65899 5     // r5 = r5 * 65899 = 13589857 * 65899 = 895557986443

[0, 12, 1, 0, 256, 895557986443]
12 bani 5 16777215 5  // r5 = r5 & 16777215 = 895557986443 & 16777215 = 6973579

[0, 13, 1, 0, 256, 6973579]
13 gtir 256 4 3       // r3 = 256 > r4 ? 1 : 0 = 256 > 256 ? 1 : 0 = 0

[0, 14, 1, 0, 256, 6973579]
14 addr 3 1 1         // r1 = r3 + r1 = 0 + 14 = 14, go to instr 15

[0, 15, 1, 0, 256, 6973579]
15 addi 1 1 1         // r1 = r1 + 1 = 15 + 1 = 16, go to instr 17

*** was wrong here - we don't go to instr 28, do we? (the r4 test, but we
 need it to pass to exit)
* insight: r4 will be 256 next time in that loop, so it's not the 65536
  comparison any more. we end up with r4=r3=1 i think?


continuing at instr 17:
[0, 17, 1, 0, 256, 6973579]
17 seti 0 5 3         // r3 = 0

[0, 18, 0, 0, 256, 6973579]
18 addi 3 1 2         // r2 = r3 + 1 = 0 + 1 = 1

[0, 19, 1, 0, 256, 6973579]
19 muli 2 256 2       // r2 = r2 * 256 = 1 * 256 = 256

[0, 20, 256, 0, 256, 6973579]
20 gtrr 2 4 2         // r2 = r2 > r4 ? 1 : 0 = 256 > 256 ? 1 : 0 = 0

[0, 21, 0, 0, 256, 6973579]
21 addr 2 1 1         // r1 = r2 + r1 = 0 + 21 = 21, go to instr 22

[0, 22, 0, 0, 256, 6973579]
22 addi 1 1 1         // r1 = r1 + 1 = 22 + 1 = 23, go to instr 24

23 seti 25 2 1        // skipped

[0, 24, 0, 0, 256, 6973579]
24 addi 3 1 3         // r3 = r3 + 1 = 0 + 1 = 1

[0, 25, 0, 1, 256, 6973579]
25 seti 17 1 1        // r1 = 17, go to instr 18


continue at instr 18:
[0, 18, 0, 1, 256, 6973579]
18 addi 3 1 2         // r2 = r3 + 1 = 1 + 1 = 2

[0, 19, 2, 1, 256, 6973579]
19 muli 2 256 2       // r2 = r2 * 256 = 2 * 256 = 512

[0, 20, 512, 1, 256, 6973579]
20 gtrr 2 4 2         // r2 = r2 > r4 ? 1 : 0 = 256 > 256 ? 1 : 0 = 1

[0, 21, 1, 1, 256, 6973579]
21 addr 2 1 1         // r1 = r2 + r1 = 1 + 21 = 22, go to instr 23

22 addi 1 1 1         // skipped

[0, 23, 1, 1, 256, 6973579]
23 seti 25 2 1        // r1 = 25, go to instr 26


continue at instr 26:

[0, 26, 1, 1, 256, 6973579]
26 setr 3 7 4         // r4 = r3 = 1
                      // interesting r4 changes, could it be different for
                      // above if we hit the above again?

[0, 27, 1, 1, 1, 6973579]
27 seti 7 3 1         // r1 = 7, go to instr 8


continue at instr 8:

[0, 8, 1, 1, 1, 6973579]
8 bani 4 255 3        // r3 = r4 & 255 = 1 & 255 = 1

[0, 9, 1, 1, 1, 6973579]
9 addr 5 3 5          // r5 = r5 + r3 = 6973579 + 1 = 6973580

[0, 10, 1, 1, 1, 6973580]
10 bani 5 16777215 5  // r5 = r5 & 16777215 = 6973580 & 16777215 = 6973580

[0, 11, 1, 1, 1, 6973580]
11 muli 5 65899 5     // r5 = r5 * 65899 = 6973580 * 65899 = 459551948420

[0, 12, 1, 1, 1, 459551948420]
12 bani 5 16777215 5  // r5 = r5 & 16777215 = 459551948420 & 16777215 = 7224964

[0, 13, 1, 1, 1, 7224964]
13 gtir 256 4 3       // r3 = 256 > r4 ? 1 : 0 = 1 > 256 ? 1 : 0 = 1

[0, 14, 1, 1, 1, 7224964]
14 addr 3 1 1         // r1 = r3 + r1 = 1 + 14 = 15, go to instr 16

15 addi 1 1 1         // skipped

[0, 16, 1, 1, 1, 7224964]
16 seti 27 1 1        // r1 = 27, go to instr 28


[0, 28, 1, 1, 1, 7224964]
28 eqrr 5 0 3         // r3 = r5 == r0 ? 1 : 0 = 7224964 == r0 ? 1 : 0
                      // so for p1, answer is 7224964

29 addr 3 1 1
30 seti 5 3 1
